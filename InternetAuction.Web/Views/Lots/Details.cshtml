@using InternetAuction.Web.ViewModels;
@using Microsoft.AspNet.Identity;
@using System.Globalization;
@using InternetAuction.Web.Infrastructure;
@using InternetAuction.Web.Helpers;

@model InternetAuction.BLL.Models.LotModel

@{
    ViewBag.Title = $"{Model.Car.Year} {Model.Car.Brand} {Model.Car.Model}";
}

@section sidebar
{
    <div class="col-12 mb-2">
        <input id="showInfoButton" type="button" name="Info" value="Lot Info" class="btn btn-warning col-12 font-weight-bold" />
    </div>

    <div id="InfoBlock" class="container">

        <h3 class="font-weight-light">Lot Info:</h3>
        <table class="table w-100 p-0">
            <tbody>
                <tr>
                    <td>Seller</td>
                    <td>@Html.ActionLink("Profile", "UserProfile", "Account", new { id = Model.SellerId }, null)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.SaleType)</td>
                    <td class="font-weight-bold">@Model.SaleType.GetDisplayName()</td>
                </tr>
                <tr>
                    <td>Start Price</td>
                    <td class="font-weight-bold">@string.Format(new CultureInfo("en-US", false), "{0:c0}", Model.StartPrice)</td>
                </tr>
                <tr>
                    <td>Turnkey Price</td>
                    <td class="font-weight-bold">@string.Format(new CultureInfo("en-US", false), "{0:c0}", Model.TurnkeyPrice)</td>
                </tr>
                <tr>
                    <td>Current Bet</td>
                    @{
                        var currentBet = Model.StartPrice;
                        if (Model.Bets?.Any() ?? false)
                        {
                            currentBet = Model.Bets.Max(b => b.Sum);
                        }
                    }
                    <td class="font-weight-bold">@string.Format(new CultureInfo("en-US", false), "{0:c0}", currentBet)</td>
                </tr>
            </tbody>
        </table>

        @if (Model.IsActive)
        {
            if (User.Identity.IsAuthenticated
                && User.Identity.GetUserId() != Model.SellerId)
            {
                <hr class="bg-dark" />
                <div>
                    @Html.Partial("~/Views/Bet/PlaceBetPartial.cshtml", new BetViewModel() { LotId = Model.Id })
                </div>


                <div>
                    <hr class="bg-dark" />
                    <h3 class="font-weight-light">Buy the lot</h3>
                    <h4>@string.Format(new CultureInfo("en-US", false), "{0:c0}", Model.TurnkeyPrice)</h4>

                    @using (Html.BeginForm("Buy", "Lots", new { id = Model.Id }, FormMethod.Post, new { @class = "m-auto" }))
                    {
                        <span id="confirmBuySpan_@Model.Id" style="display: none;">
                            <span class="h6">Are you sure you want to buy?</span> <br />
                            <span>
                                <button class="btn btn-success col-5 float-left" type="submit">Yes</button>
                                <a href="#" class="btn btn-danger col-5 float-right" onclick="confirmPurchase('@Model.Id', false)">No</a>
                            </span>
                        </span>
                        <span id="buySpan_@Model.Id" class="col-12 p-0 pl-3">
                            <a href="#" class="btn btn-success col-10" onclick="confirmPurchase('@Model.Id', true)">Buy</a>
                        </span>
                    }
                </div>
            }


            if (User.Identity.GetUserId() == Model.SellerId)
            {
                var bet = Model.Bets.OrderByDescending(b => b.Sum).FirstOrDefault();

                <hr class="bg-dark" />

                <h3 class="font-weight-light">Current bet:</h3>

                if (bet is null)
                {
                    <p>No bet yet</p>
                }
                else
                {
                    <h4>@string.Format(new CultureInfo("en-US", false), "{0:c0}", bet.Sum)</h4>

                    using (Html.BeginForm("Sell", "Lots", new { lotId = bet.LotId, betId = bet.Id }, FormMethod.Post, new { @class = "" }))
                    {
                        <span id="confirmSaleSpan_@Model.Id" style="display: none;">
                            <span class="h6">Are you sure you want to sell?</span> <br />
                            <span>
                                <button class="btn btn-success col-5 float-left" type="submit">Yes</button>
                                <a href="#" class="btn btn-danger col-5 float-right" onclick="confirmSale('@Model.Id', false)">No</a>
                            </span>
                        </span>
                        <span id="saleSpan_@Model.Id" class="col-12 p-0 pl-3">
                            <a href="#" class="btn btn-success col-10" onclick="confirmSale('@Model.Id', true)">Sell</a>
                        </span>
                    }
                }
            }
        }
    </div>
}

<div>
    @if (TempData["Success"] != null)
    {
        @Html.ShowAlert(TempData["Success"].ToString(), "success")
    }
    else if (TempData["Error"] != null)
    {
        @Html.ShowAlert(TempData["Error"].ToString(), "danger")
    }
    else if (TempData["BetAccepted"] != null)
    {
        @Html.ShowAlert(TempData["BetAccepted"].ToString(), "success")
    }

    <h1>
        @Html.DisplayFor(model => model.Car.Year)
        @Html.DisplayFor(model => model.Car.Brand)
        @Html.DisplayFor(model => model.Car.Model)
    </h1>
    <hr />
    @if (Model.Car.CarImages.Count != 0)
    {
        <div id="carouselExampleIndicators" class="carousel slide" data-interval="false" data-ride="carousel">
            <div class="carousel-inner">
                @{ var i = 0; }
                @foreach (var img in Model.Car.CarImages)
                {
                    i++;
                    var active = i == 1 ? "active" : "";
                    <div class="carousel-item @active">
                        <img class="d-block w-100 carouselImage" src="@img.Url" alt="@img.Title">
                    </div>
                }
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    }

    @if ((User.Identity.GetUserId() == Model.SellerId || User.IsInRole("Admin") && Model.BuyerId is null))
    {
        <div class="container p-2">
            @using (Html.BeginForm("Delete", "Lots", new { id = Model.Id }, FormMethod.Post, new { @class = "col-xs-12 col-lg-12 p-0" }))
            {
                @Html.ActionLink("Edit", "Edit", "Lots", new { id = Model.Id }, new { @class = "btn btn-info col-xs-12 col-lg-2 mb-2 mb-lg-0" })
                <span id="confirmDeleteSpan_@Model.Id" style="display: none;" class="col-xs-12 col-lg-2 p-0">
                    <span class="h6">Are you sure you want to delete?</span>
                    <span>
                        <button class="btn btn-danger col-xs-6 col-lg-2 mt-2 mt-lg-0 mb-2 mb-lg-0" type="submit">Yes</button>
                        <a href="#" class="btn btn-primary col-xs-6 col-lg-2" onclick="confirmDelete('@Model.Id', false)">No</a>
                    </span>
                </span>
                <span id="deleteSpan_@Model.Id" class="col-2 col-lg-2 p-0">
                    <a href="#" class="btn btn-danger col-xs-12 col-lg-2" onclick="confirmDelete('@Model.Id', true)">Delete</a>
                </span>
            }
        </div>
    }

    <div class="container d-flex justify-content-md-center float-left float-md-none">
        <table class="table w-75">
            <thead>
                <tr>
                    <th scope="col">Parameter</th>
                    <th scope="col">Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.Brand)</td>
                    <td>@Html.DisplayFor(m => m.Car.Brand)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.Model)</td>
                    <td>@Html.DisplayFor(m => m.Car.Model)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.EngineType)</td>
                    <td>@Html.DisplayFor(m => m.Car.EngineType)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.Mileage)</td>
                    <td>@Html.DisplayFor(m => m.Car.Mileage) Km</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.Year)</td>
                    <td>@Html.DisplayFor(m => m.Car.Year)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.VIN)</td>
                    <td>@Html.DisplayFor(m => m.Car.TechnicalPassport.VIN)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.DriveUnit)</td>
                    <td>@Model.Car.TechnicalPassport.DriveUnit.GetDisplayName()</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.BodyType)</td>
                    <td>@Model.Car.TechnicalPassport.BodyType.GetDisplayName()</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.Transmission)</td>
                    <td>@Model.Car.TechnicalPassport.Transmission.GetDisplayName()</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.PrimaryDamage)</td>
                    <td>@Html.DisplayFor(m => m.Car.TechnicalPassport.PrimaryDamage)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.Car.TechnicalPassport.HasKeys)</td>
                    <td>@Html.DisplayFor(m => m.Car.TechnicalPassport.HasKeys)</td>
                </tr>
            </tbody>
        </table>
    </div>

    @if (Model.Bets?.Any() ?? false)
    {
        <div class="border p-3">
            <h4>Last Bets:</h4>
            @{ var bets = Model.Bets.OrderByDescending(b => b.BetDate).Take(4).ToList(); }
            @for (var i = 0; i < bets.Count; i++)
            {
                <div class="card mb-2 bg-light">
                    <div class="card-body">
                        <b>#@(i + 1)</b>  | Bet Date - <b>@bets[i].BetDate</b> | Sum - <b>@string.Format(new CultureInfo("en-US", false), "{0:c0}", bets[i].Sum)</b>
                    </div>
                </div>
            }
        </div>
    }

</div>

@section scripts {
    @Scripts.Render("~/bundles/customScripts/confirmDelete")
    @Scripts.Render("~/bundles/customScripts/confirmPurchase")
    @Scripts.Render("~/bundles/customScripts/confirmSale")
    @Scripts.Render("~/bundles/customScripts/handlePlaceBetRequest")
    @Scripts.Render("~/bundles/customScripts/detailsInfoBlockToggle")
}